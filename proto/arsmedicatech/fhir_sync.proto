syntax = "proto3";

package arsmedicatech.fhir_sync.v1;

import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";

option java_multiple_files = true;
option java_package = "com.arsmedicatech.sync.v1";
option go_package   = "github.com/arsmedicatech/fhir-sync/proto;fhir_syncpb";

//////////////////////////////
// Canonical FHIR wrappers  //
//////////////////////////////

// You can keep it lean by only modelling the resources you need
// or embed full FHIR JSON blobs inside `google.protobuf.Any`.
message Patient {
  string id                         = 1;   // FHIR.id
  repeated Identifier identifier    = 2;   // FHIR.identifier
  HumanName name                    = 3;   // FHIR.name[0]
  string gender                     = 4;   // FHIR.gender
  google.protobuf.Timestamp birth   = 5;   // FHIR.birthDate
}

message Identifier {
  string system = 1;
  string value  = 2;
}

message HumanName {
  string family = 1;
  repeated string given = 2;
}

//////////////////////////////
// gRPC Service definition  //
//////////////////////////////

service FhirSync {
  rpc UpsertPatient (Patient)          returns (PatientAck);
  rpc GetPatient    (PatientRef)       returns (Patient);
  rpc StreamChanges (stream ChangeSet) returns (stream Ack); // bidirectional
}

message PatientRef  { string id = 1; }
message PatientAck  { string id = 1; string status = 2; }
message ChangeSet   { google.protobuf.Any resource = 1; }
message Ack         { string message           = 1; }
